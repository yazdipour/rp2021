,translation
0,"{'en': 'what is the time zone of salt lake city?', 'sparql': 'select distinct ?uri where [ res:Salt_Lake_City onto:timeZone ?uri ]'}"
1,"{'en': 'who killed caesar?', 'sparql': 'select distinct ?uri where [ ?uri dct:subject dbc:Assassins_of_Julius_Caesar ]'}"
2,"{'en': 'what is the highest mountain in germany?', 'sparql': 'select ?uri where [ ?uri rdf:type onto:Mountain ; onto:elevation ?elevation ; onto:locatedInArea res:Germany ] order BY DESC(?elevation) limit 1'}"
3,"{'en': 'which american presidents were in office during the vietnam war?', 'sparql': 'select ?uri where [ ?uri dct:subject dbc:Presidents_of_the_United_States . res:Vietnam_War onto:commander ?uri ]'}"
4,"{'en': 'butch otter is the governor of which u.s. state?', 'sparql': 'select distinct ?uri where [ ?uri a <yago:WikicatStatesOfTheUnitedStates> ; <dbpedia2:governor> res:Butch_Otter ]'}"
5,"{'en': 'how many gold medals did michael phelps win at the 2008 olympics?', 'sparql': 'select Count(?sub) as ?c where [ ?sub onto:goldMedalist res:Michael_Phelps . filter (contains (str(?sub), ""2008"") && contains (str(?sub), ""Olympics"")) ]'}"
6,"{'en': 'which artists were born on the same date as rachel stevens?', 'sparql': 'select distinct ?uri where [ ?uri a onto:Artist . res:Rachel_Stevens onto:birthDate ?birthdate . ?uri onto:birthDate ?birthdate ]'}"
7,"{'en': 'what is the profession of frank herbert?', 'sparql': 'select distinct ?string where [ res:Frank_Herbert dbpedia2:occupation ?string ]'}"
8,"{'en': 'are taiko some kind of japanese musical instrument?', 'sparql': 'ask where [ res:Taiko a <yago:WikicatJapaneseMusicalInstruments> ]'}"
9,"{'en': 'how many seats does the home stadium of fc porto have?', 'sparql': 'select ?capacity where [ [ res:FC_Porto onto:ground ?ground . ?ground onto:capacity ?capacity ] UNION [ res:FC_Porto onto:ground ?ground . ?ground dbp:capacity ?capacity ] ]'}"
10,"{'en': 'which frequent flyer program has the most airlines?', 'sparql': 'select ?uri where [ ?airline <rdf:type> <onto:Airline> . ?airline dbp:frequentFlyer ?uri. ] GROUP BY ?uri order BY DESC(COUNT(distinct ?airline)) OFFSET 0 limit 1'}"
11,"{'en': 'which european countries have a constitutional monarchy?', 'sparql': 'select ?uri where [ ?uri dct:subject dbc:Countries_in_Europe ; onto:governmentType res:Constitutional_monarchy ]'}"
12,"{'en': 'which countries have places with more than two caves?', 'sparql': 'select distinct ?uri where [ ?cave rdf:type onto:Cave ; onto:location ?uri . ?uri rdf:type onto:Country ] GROUP BY ?uri HAVING ( COUNT(?cave) > 2 )'}"
13,"{'en': 'which airports are located in california, usa?', 'sparql': 'select distinct ?uri where [ ?uri a <onto:Airport> [ ?uri <onto:location> res:California ] UNION [ ?uri <onto:city> res:California> ] UNION [ ?uri <onto:city> ?city . ?city <onto:isPartOf> res:California> ] UNION [ ?uri <onto:operator> res:California> ] ]'}"
14,"{'en': 'what are the nicknames of san francisco?', 'sparql': 'select distinct ?string where [ res:San_Francisco foaf:nick ?string ]'}"
15,"{'en': 'what is angela merkelâ€™s birth name?', 'sparql': 'select distinct ?string where [ res:Angela_Merkel dbp:birthName ?string ]'}"
16,"{'en': 'who is the mayor of berlin?', 'sparql': 'select distinct ?uri where [ res:Berlin dbp:leader ?uri ]'}"
17,"{'en': 'which countries in the european union adopted the euro?', 'sparql': 'select distinct ?uri where [ ?uri a <onto:Country> [ ?uri <onto:currency> res:Euro ] UNION [ ?uri <dbpedia2:currencyCode> ""EUR""@en ] ]'}"
18,"{'en': 'which software has been published by mean hamster software?', 'sparql': 'select distinct ?uri where [ ?uri rdf:type onto:Software [ ?uri prop:publisher ""Mean Hamster Software""@en ] UNION [ ?uri onto:publisher res:Mean_Hamster_Software ] ]'}"
19,"{'en': 'which country was bill gates born in?', 'sparql': 'select distinct ?country where [ [ res:Bill_Gates onto:birthPlace ?birthPlace . ?birthPlace onto:country ?country ] UNION [ res:Bill_Gates onto:birthPlace ?birthPlace . ?birthPlace onto:isPartOf ?place . ?place onto:country ?country ] ]'}"
20,"{'en': 'how many grand-children did jacques cousteau have?', 'sparql': 'select COUNT(distinct ?y AS ?y) where [ res:Jacques_Cousteau <onto:child> ?x . ?x <onto:child> ?y . ]'}"
21,"{'en': 'give me all professional skateboarders from sweden.', 'sparql': 'select distinct ?uri where [ ?uri onto:occupation res:Skateboarder [ ?uri onto:birthPlace res:Sweden ] UNION [ ?uri onto:birthPlace ?place . ?place onto:country res:Sweden ] ]'}"
22,"{'en': 'which monarchs of the united kingdom were married to a german?', 'sparql': 'select distinct ?uri where [ ?uri rdf:type yago:WikicatMonarchsOfTheUnitedKingdom ; onto:spouse ?spouse . ?spouse onto:birthPlace res:Germany ]'}"
23,"{'en': 'give me all argentine films.', 'sparql': 'select distinct ?uri where [ [ ?uri rdf:type yago:ArgentineFilms ] UNION [ ?uri rdf:type onto:Film [ ?uri onto:country res:Argentina ] UNION [ ?uri dbp:country ""Argentina""@en ] ] ]'}"
24,"{'en': 'how did michael jackson die?', 'sparql': 'select distinct ?s where [ res:Michael_Jackson <dbpedia2:deathCause> ?s ]'}"
25,"{'en': 'which u.s. state has been admitted latest?', 'sparql': 'select distinct ?uri where [ ?uri dct:subject dbc:States_of_the_United_States ; dbp:admittancedate ?x ] order BY DESC(?x) limit 1'}"
26,"{'en': 'which classes does the millepede belong to?', 'sparql': 'select distinct ?String where [ res:Millipede dbp:taxon ?String ]'}"
27,"{'en': 'give me the homepage of forbes.', 'sparql': 'select distinct ?string where [ res:Forbes foaf:homepage ?string ]'}"
28,"{'en': 'who is the husband of amanda palmer?', 'sparql': 'select distinct ?uri where [ ?uri <onto:spouse> res:Amanda_Palmer ]'}"
29,"{'en': 'who painted the storm on the sea of galilee?', 'sparql': 'select distinct ?uri where [ res:The_Storm_on_the_Sea_of_Galilee onto:author ?uri ]'}"
30,"{'en': 'what is the highest place of karakoram?', 'sparql': 'select distinct ?uri where [ res:Karakoram dbp:highest ?uri ]'}"
31,"{'en': 'when did finland join the eu?', 'sparql': 'select distinct ?date where [ res:Finland dbp:accessioneudate ?date ]'}"
32,"{'en': 'which actors play in big bang theory?', 'sparql': 'select distinct ?uri where [ res:The_Big_Bang_Theory <onto:starring> ?uri ]'}"
33,"{'en': 'which computer scientist won an oscar?', 'sparql': 'select distinct ?uri where [ ?uri <onto:field> res:Computer_science ; <onto:award> res:Academy_Award> ]'}"
34,"{'en': 'who wrote harry potter?', 'sparql': 'select distinct ?uri where [ res:Harry_Potter <dbpedia2:author> ?uri ]'}"
35,"{'en': 'give me all writers that won the nobel prize in literature.', 'sparql': 'select distinct ?uri where [ ?uri a <onto:Writer> ; <onto:award> res:Nobel_Prize_in_Literature ]'}"
36,"{'en': 'give me english actors starring in lovesick.', 'sparql': 'select distinct ?uri where [ res:Lovesick_(1983_film) onto:starring ?uri . ?uri onto:birthPlace ?city . ?city onto:country res:United_Kingdom> ]'}"
37,"{'en': 'what is the nick name of baghdad?', 'sparql': 'select ?nm where [ res:Baghdad foaf:nick ?nm ]'}"
38,"{'en': 'in which city was the president of montenegro born?', 'sparql': 'select distinct ?uri where [ ?x dbp:title res:President_of_Montenegro ; onto:birthPlace ?uri . ?uri onto:type res:Capital_city ]'}"
39,"{'en': 'which u.s. state has the highest population density?', 'sparql': ""select ?uri where [ ?uri <onto:country> res:United_States . ?uri <onto:capital> ?capital . ?uri <dbpedia2:densityrank> ?density . OPTIONAL [?uri <rdfs:label> ?string. filter (lang(?string) = 'en') ] ] order BY ASC(?density) limit 1""}"
40,"{'en': 'what is the longest river in china?', 'sparql': 'select distinct ?uri where [ ?uri a <onto:River> ; <onto:country> res:China ; <dbpedia2:length> ?l ] order BY DESC(?l) OFFSET 0 limit 1'}"
41,"{'en': 'what is the area code of berlin?', 'sparql': 'select distinct ?string where [ res:Berlin onto:areaCode ?string ]'}"
42,"{'en': 'how many scientists graduated from an ivy league university?', 'sparql': 'select (COUNT(distinct ?uri) AS ?c) where [ ?uri a <onto:Scientist> ; <onto:almaMater> ?university . ?university <onto:affiliation> res:Ivy_League ; a <onto:University> ]'}"
43,"{'en': 'which professional surfers were born in australia?', 'sparql': 'select distinct ?uri where [ [ ?uri onto:occupation res:Surfer ; onto:birthPlace res:Australia ] UNION [ ?uri onto:occupation res:Surfer ; onto:birthPlace ?place . ?place onto:country res:Australia ] ]'}"
44,"{'en': 'give me all dutch parties.', 'sparql': 'select distinct ?uri where [ ?uri a <onto:PoliticalParty> ; <onto:country> res:Netherlands ]'}"
45,"{'en': 'how many moons does mars have?', 'sparql': 'select distinct ?n where [ res:Mars <dbpedia2:satellites> ?n ]'}"
46,"{'en': ""what is batman's real name?"", 'sparql': 'select distinct ?label where [ <res:Batman> foaf:name ?label filter ( str(?label) != ""Batman"" ) ]'}"
47,"{'en': 'what is elon musk famous for?', 'sparql': 'select distinct ?uri where [ res:Elon_Musk <onto:knownFor> ?uri ]'}"
48,"{'en': 'who is the author of wikileaks?', 'sparql': 'select ?uri where [ res:WikiLeaks onto:author ?uri ]'}"
49,"{'en': 'sean parnell was the governor of which u.s. state?', 'sparql': 'select distinct ?uri where [ res:Sean_Parnell onto:region ?uri ]'}"
50,"{'en': 'how many years was the ford model t manufactured?', 'sparql': 'select ?years where [ res:Ford_Model_T onto:productionEndYear ?end ; onto:productionStartYear ?start. BIND ( ( year(xsd:date(?end)) - year(xsd:date(?start)) ) AS ?years) ]'}"
51,"{'en': 'when was carlo giuliani shot?', 'sparql': 'select distinct xsd:date(?date) where [ res:Death_of_Carlo_Giuliani onto:deathDate ?date ]'}"
52,"{'en': 'give me all animals that are extinct.', 'sparql': 'select distinct ?uri where [ ?uri a onto:Animal ; onto:conservationStatus> ""EX"" ]'}"
53,"{'en': 'who was the wife of president lincoln?', 'sparql': 'select ?uri ?string where [ res:Abraham_Lincoln onto:spouse ?uri ]'}"
54,"{'en': 'how many awards has bertrand russell?', 'sparql': 'select (COUNT(?Awards) AS ?Counter) where [ res:Bertrand_Russell dbp:awards ?Awards ]'}"
55,"{'en': 'is pamela anderson a vegan?', 'sparql': 'ask where [ res:Pamela_Anderson a yago:WikicatAmericanVegans ]'}"
56,"{'en': 'which space probes were sent into orbit around the sun?', 'sparql': 'select distinct ?s where [ ?s dct:subject dbc:Missions_to_the_Sun ; rdf:type ?type filter ( ?type IN (onto:Satellite, onto:ArtificialSatellite) ) ]'}"
57,"{'en': 'which german cities have more than 250000 inhabitants?', 'sparql': 'select distinct ?uri where [ [ ?uri a <onto:City> ] UNION [ ?uri a <onto:Town> ] ?uri <onto:country> res:Germany ; <onto:populationTotal> ?population filter ( ?population > 250000 ) ]'}"
58,"{'en': 'who is the daughter of robert kennedy married to?', 'sparql': 'select distinct ?uri where [ res:Robert_F._Kennedy <onto:child> ?child . ?child <onto:spouse> ?uri ]'}"
59,"{'en': 'how many students does the free university of amsterdam have?', 'sparql': 'select distinct ?num where [ res:Vrije_Universiteit_Amsterdam onto:numberOfStudents ?num ]'}"
60,"{'en': 'what is the revenue of ibm?', 'sparql': 'select ?number where [ res:IBM onto:revenue ?number ]'}"
61,"{'en': 'how many james bond movies do exist?', 'sparql': 'select (COUNT(distinct ?uri) AS ?c) where [ ?uri dct:subject res:Category:James_Bond_films ]'}"
62,"{'en': 'who does the voice of bart simpson?', 'sparql': 'select distinct ?uri where [ res:Bart_Simpson <dbpedia2:voiceactor> ?uri ]'}"
63,"{'en': 'who was tom hanks married to?', 'sparql': 'select distinct ?uri where [ res:Tom_Hanks onto:spouse ?uri ]'}"
64,"{'en': 'through which countries does the yenisei river flow?', 'sparql': 'select distinct ?uri where [ res:Yenisei_River onto:country ?uri ]'}"
65,"{'en': 'give me all cars that are produced in germany.', 'sparql': 'select distinct ?uri where [ ?uri a <onto:Automobile> [ ?uri <onto:assembly> res:Germany ] UNION [ ?uri <dbpedia2:assembly> res:Germany> ] UNION [ [ ?uri <onto:manufacturer> ?x ] UNION [ ?uri <dbpedia2:manufacturer> ?x ] [ ?x <onto:locationCountry> res:Germany> ] UNION [ ?x <onto:location> res:Germany> ] ] ]'}"
66,"{'en': 'when did michael jackson die?', 'sparql': 'select distinct ?date where [ res:Michael_Jackson <onto:deathDate> ?date ]'}"
67,"{'en': 'what is the highest volcano in africa?', 'sparql': 'select distinct ?uri where [ ?uri a onto:Volcano ; onto:locatedInArea> ?area . ?area dct:subject dbc:Countries_in_Africa . ?uri onto:elevation> ?elevation ] order BY DESC(?elevation) limit 1'}"
68,"{'en': 'which poet wrote the most books?', 'sparql': 'select distinct ?uri where [ ?uri <onto:occupation> res:Poet . ?x <onto:author> ?uri . ?x <rdf:type> <onto:Book> . ] order BY DESC(COUNT(?x)) OFFSET 0 limit 1'}"
69,"{'en': 'give me all gangsters from the prohibition era.', 'sparql': 'select distinct ?uri where [ ?uri onto:occupation res:Gangster ; dct:subject dbc:Prohibition-era_gangsters ]'}"
70,"{'en': 'give me all spacecrafts that flew to mars.', 'sparql': 'select distinct ?s where [ ?s dct:subject dbc:Mars_rovers ; rdf:type ?type filter ( ?type IN (onto:Satellite, onto:ArtificialSatellite) ) ]'}"
71,"{'en': 'show me all czech movies.', 'sparql': 'select distinct ?uri where [ ?uri a <onto:Film> ; <onto:country> res:Czech_Republic ]'}"
72,"{'en': 'give me all taikonauts.', 'sparql': ""select distinct ?uri where [ [ ?uri a <onto:Astronaut> ; <onto:nationality> res:People's_Republic_of_China ] UNION [ ?uri a <onto:Astronaut> ; <onto:nationality> res:China> ] ]""}"
73,"{'en': 'which countries have more than ten volcanoes?', 'sparql': 'select distinct ?uri where [ ?x a onto:Volcano ; onto:locatedInArea> ?uri . ?uri a onto:Country> ] GROUP BY ?uri HAVING ( COUNT(?x) > 10 )'}"
74,"{'en': 'give me all movies with tom cruise.', 'sparql': 'select distinct ?uri where [ ?uri rdf:type onto:Film [ ?uri prop:starring res:Tom_Cruise ] UNION [ ?uri onto:starring res:Tom_Cruise ] OPTIONAL [ ?uri rdfs:label ?string filter ( lang(?string) = ""en"" ) ] ]'}"
75,"{'en': ""when did dracula's creator die?"", 'sparql': 'select distinct xsd:date(?date) where [ res:Count_Dracula <onto:creator> ?x . ?x <onto:deathDate> ?date. ]'}"
76,"{'en': 'who created english wikipedia?', 'sparql': 'select ?uri where [ res:Wikipedia onto:author ?uri ]'}"
77,"{'en': 'give me all female german chancellors.', 'sparql': 'select distinct ?uri where [ res:Chancellor_of_Germany dbp:incumbent ?uri ]'}"
78,"{'en': 'who owns aldi?', 'sparql': 'select distinct ?uri where [ res:Aldi dbp:founders ?uri ]'}"
79,"{'en': 'which books were written by danielle steel?', 'sparql': 'select ?uri where [ ?uri rdf:type onto:Book ; onto:author res:Danielle_Steel ]'}"
80,"{'en': 'who was influenced by socrates?', 'sparql': 'select distinct ?uri where [ ?uri <onto:influencedBy> res:Socrates ]'}"
81,"{'en': 'how deep is lake chiemsee?', 'sparql': 'select distinct ?n where [ res:Chiemsee <onto:maximumDepth> ?n ]'}"
82,"{'en': 'which companies work in the aerospace industry as well as in medicine?', 'sparql': 'select distinct ?uri where [ ?uri a onto:Company ; onto:industry res:Aerospace ; onto:industry res:Medical ]'}"
83,"{'en': 'which professional surfers were born on the philippines?', 'sparql': 'select distinct ?uri where [ ?uri onto:occupation res:Surfer ; onto:birthPlace res:Philippines ]'}"
84,"{'en': 'who were the parents of queen victoria?', 'sparql': 'select distinct ?uri where [ res:Queen_Victoria onto:parent ?uri ]'}"
85,"{'en': 'are there any castles in the united states?', 'sparql': 'ask where [ ?uri dct:subject dbc:Castles_in_the_United_States ]'}"
86,"{'en': 'which languages are spoken in estonia?', 'sparql': 'select distinct ?uri where [ ?uri <onto:spokenIn> res:Estonia ]'}"
87,"{'en': 'give me a list of all critically endangered birds.', 'sparql': 'select distinct ?uri ?p where [ ?uri rdf:type onto:Bird [ ?uri onto:conservationStatus ""CR"" ] UNION [ ?uri dct:subject dbc:Critically_endangered_animals ] ]'}"
88,"{'en': 'which countries are connected by the rhine?', 'sparql': 'select distinct ?uri where [ [res:Rhine onto:country ?uri ] UNION [res:Rhine dbp:country ?uri] ]'}"
89,"{'en': 'who was the father of queen elizabeth ii?', 'sparql': 'select distinct * where [ res:Elizabeth_II onto:parent ?uri . ?uri foaf:gender ""male""@en ]'}"
90,"{'en': 'give me all chemical elements.', 'sparql': 'select distinct ?uri where [ ?uri rdf:type owl:Thing ; dct:subject dbc:Chemical_elements ]'}"
91,"{'en': 'give me all american presidents of the last 20 years.', 'sparql': 'select distinct ?uri where [ ?uri rdf:type onto:Person ; dct:subject dbc:Presidents_of_the_United_States ; onto:activeYearsEndDate ?termEnd filter ( ( year(now()) - year(?termEnd) ) <= 20 ) ]'}"
92,"{'en': 'when is the movie worst case scenario going to be in cinemas in the netherlands?', 'sparql': 'select distinct ?rel where [ res:Worst_Case_Scenario_(film) ?p ?o ; onto:releaseDate ?rel filter contains(lcase(str(?o)), ""netherlands"") ]'}"
93,"{'en': 'whom did lance bass marry?', 'sparql': 'select distinct ?uri where [ [res:Lance_Bass onto:spouse ?uri] UNION [?uri onto:spouse res:Lance_Bass>] ]'}"
94,"{'en': 'which subsidiary of tui travel serves both glasgow and dublin?', 'sparql': 'select distinct ?uri where [ res:TUI_Travel <onto:subsidiary> ?uri . ?uri <onto:targetAirport> res:Glasgow_International_Airport> ; <onto:targetAirport> res:Dublin_Airport> ]'}"
95,"{'en': 'what languages are spoken in pakistan?', 'sparql': 'select distinct ?uri where [ res:Pakistan <onto:language> ?uri ]'}"
96,"{'en': 'who is the daughter of bill clinton married to?', 'sparql': 'select distinct ?uri where [ res:Bill_Clinton onto:child ?child . ?child onto:spouse ?uri . ?uri rdfs:label ?string ]'}"
97,"{'en': 'who was on the apollo 11 mission?', 'sparql': 'select distinct ?uri where [ res:Apollo_11 <dbpedia2:crewMembers> ?uri ]'}"
98,"{'en': 'what is the wavelength of indigo?', 'sparql': 'select ?n where [ res:Indigo onto:wavelength ?n ]'}"
99,"{'en': 'give me all b-sides of the ramones.', 'sparql': 'select distinct ?string where [ ?x onto:musicalArtist res:Ramones ; onto:bSide ?string ]'}"
100,"{'en': 'who was called scarface?', 'sparql': 'select ?uri where [ ?uri onto:alias ?alias filter contains(lcase(?alias), ""scarface"") ]'}"
101,"{'en': 'which rivers flow into the north sea?', 'sparql': 'select distinct ?uri where [ ?uri a <onto:River> ; <onto:riverMouth> res:North_Sea ]'}"
102,"{'en': 'where is fort knox located?', 'sparql': 'select distinct ?uri where [ res:Fort_Knox <onto:location> ?uri. ?uri a <onto:Place>. ]'}"
103,"{'en': 'which daughters of british earls died at the same place they were born at?', 'sparql': 'select distinct ?uri where [ ?uri rdf:type yago:WikicatDaughtersOfBritishEarls ; onto:birthPlace ?x ; onto:deathPlace ?y filter ( ?x = ?y ) ]'}"
104,"{'en': 'how many emperors did china have?', 'sparql': 'select COUNT(distinct ?uri AS ?uri) where [ ?uri <dbpedia2:title> res:Emperor_of_China . ]'}"
105,"{'en': 'what are the names of the teenage mutant ninja turtles?', 'sparql': 'select distinct ?s where [ res:Teenage_Mutant_Ninja_Turtles <dbpedia2:members> ?x . ?x foaf:givenName ?s ]'}"
106,"{'en': 'where does piccadilly start?', 'sparql': 'select distinct ?uri where [ ?uri <onto:routeStart> res:Piccadilly ]'}"
107,"{'en': ""what is the name of the university where obama's wife studied?"", 'sparql': 'select distinct ?s where [ res:Barack_Obama <onto:spouse> ?x . ?x <onto:almaMater> ?s ]'}"
108,"{'en': 'when did paraguay proclaim its independence?', 'sparql': 'select distinct ?date where [ res:Paraguay <onto:foundingDate> ?date ]'}"
109,"{'en': 'how short is the shortest active nba player?', 'sparql': 'select distinct ?n where [ ?x a <onto:BasketballPlayer> ; <onto:league> res:National_Basketball_Association ; <onto:height> ?n filter NOT EXISTS [ ?x <onto:activeYearsEndYear> ?d ] ] order BY ASC(?n) OFFSET 0 limit 1'}"
110,"{'en': 'where did abraham lincoln die?', 'sparql': 'select distinct ?uri where [ res:Abraham_Lincoln onto:deathPlace ?uri ]'}"
111,"{'en': 'when was jack wolfskin founded?', 'sparql': 'select distinct xsd:date(?year) where [ res:Jack_Wolfskin onto:foundingYear ?year ]'}"
112,"{'en': 'in which city is the headquarter of air china?', 'sparql': 'select distinct ?uri where [ res:Air_China <onto:headquarter> ?uri . ?uri a <yago:City108524735> ]'}"
113,"{'en': 'what is the founding year of the brewery that produces pilsner urquell?', 'sparql': 'select distinct xsd:date(?num) where [ res:Pilsner_Urquell <dbpedia2:brewery> ?uri . ?uri onto:foundingYear ?num ]'}"
114,"{'en': 'when did the boston tea party take place?', 'sparql': 'select distinct ?d where [ res:Boston_Tea_Party <dbpedia2:date> ?d ]'}"
115,"{'en': 'which animals are critically endangered?', 'sparql': 'select distinct ?uri where [ ?uri a onto:Animal ; onto:conservationStatus> ""CR"" ]'}"
116,"{'en': 'which politicians were married to a german?', 'sparql': 'select distinct ?uri where [ ?uri a <onto:Politician> ; <onto:spouse> ?spouse [ ?spouse <onto:birthPlace> res:Germany ] UNION [ ?spouse <onto:birthPlace> ?p . ?p <onto:country> res:Germany> ] ]'}"
117,"{'en': ""how big is the earth's diameter?"", 'sparql': 'select distinct (( xsd:double(?radius) * 2 ) AS ?diameter) where [ res:Earth onto:meanRadius ?radius ]'}"
118,"{'en': 'is the wife of president obama called michelle?', 'sparql': 'ask where [ res:Barack_Obama onto:spouse ?spouse . ?spouse rdfs:label ?name filter regex(?name, ""Michelle"") ]'}"
119,"{'en': 'which u.s. state has the abbreviation mn?', 'sparql': 'select distinct ?uri where [ ?uri a yago:WikicatStatesOfTheUnitedStates ; dbp:postalabbreviation ""MN""^^<rdf:langString> ]'}"
120,"{'en': 'when did muhammad die?', 'sparql': 'select distinct xsd:date(?date) where [ res:Muhammad onto:deathDate ?date ]'}"
121,"{'en': 'what is the atmosphere of the moon composed of?', 'sparql': 'select distinct ?uri where [ res:Moon <dbpedia2:atmosphereComposition> ?uri ]'}"
122,"{'en': 'who is the governor of texas?', 'sparql': 'select distinct ?string where [ res:Texas dbp:governor ?string ]'}"
123,"{'en': 'which movies did kurosawa direct?', 'sparql': 'select ?uri where [ ?uri rdf:type onto:Film ; onto:director res:Akira_Kurosawa ]'}"
124,"{'en': 'what was the name of the famous battle in 1836 in san antonio?', 'sparql': 'select ?uri where [ ?uri a onto:MilitaryConflict ; onto:place res:San_Antonio ; onto:date ?date filter ( ?date > ""1835-12-31T00:00:00Z""^^xsd:dateTime ) filter ( ?date <= ""1836-12-31T00:00:00Z""^^xsd:dateTime ) ]'}"
125,"{'en': 'give me the official websites of actors of the television show charmed.', 'sparql': 'select distinct ?uri where [ res:Charmed onto:starring ?actors . ?actors foaf:homepage ?uri ]'}"
126,"{'en': 'how many calories does a baguette have?', 'sparql': 'select distinct ?n where [ res:Baguette <dbpedia2:calories> ?n ]'}"
127,"{'en': 'give me all libraries established before 1400.', 'sparql': 'select distinct ?uri where [ ?uri a <onto:Library> ; dbp:established ?year filter ( ?year < 1400 ) ]'}"
128,"{'en': 'give me all frisian islands that belong to the netherlands.', 'sparql': 'select distinct ?uri where [ ?uri rdf:type yago:WikicatFrisianIslands ; onto:country res:Netherlands ]'}"
129,"{'en': 'which museum exhibits the scream by munch?', 'sparql': 'select distinct ?uri where [ res:The_Scream onto:museum ?uri ]'}"
130,"{'en': 'when was the de beers company founded?', 'sparql': 'select distinct xsd:date(?date) where [ res:De_Beers onto:foundingYear ?date ]'}"
131,"{'en': 'who became president after jfk died?', 'sparql': 'select distinct ?uri where [ res:John_F._Kennedy <dbpedia2:presidentEnd> ?x . ?uri <dbpedia2:presidentStart> ?x; a <onto:Person>. ]'}"
132,"{'en': 'who are the parents of the wife of juan carlos i?', 'sparql': 'select distinct ?uri where [ res:Juan_Carlos_I_of_Spain onto:spouse ?x . ?x onto:parent ?uri ]'}"
133,"{'en': 'who is the novelist of the work a song of ice and fire?', 'sparql': 'select ?Novelist where [ res:A_Song_of_Ice_and_Fire dbp:author ?Novelist ]'}"
134,"{'en': 'in which studio did the beatles record their first album?', 'sparql': 'select ?studio where [ ?album onto:artist res:The_Beatles ; rdf:type onto:Album ; onto:releaseDate ?date ; dbp:studio ?studio ] order BY ASC(?date) limit 1'}"
135,"{'en': 'which beer brewing companies are located in north-rhine westphalia?', 'sparql': 'select ?company where [ ?company dct:subject dbc:Companies_based_in_North_Rhine-Westphalia ; rdf:type onto:Brewery ]'}"
136,"{'en': 'when did princess diana die?', 'sparql': 'select distinct xsd:date(?d) where [ res:Diana,_Princess_of_Wales <onto:deathDate> ?d ]'}"
137,"{'en': 'who founded intel?', 'sparql': 'select distinct ?uri where [ res:Intel <dbpedia2:founders> ?uri ]'}"
138,"{'en': 'who is the youngest player in the premier league?', 'sparql': 'select distinct ?uri where [ ?uri onto:team ?team . ?league onto:league res:Premier_League . ?league onto:team ?team . ?uri onto:birthDate ?date ] order BY DESC(?date) limit 1'}"
139,"{'en': 'which instruments does cat stevens play?', 'sparql': 'select distinct ?uri where [ res:Cat_Stevens <onto:instrument> ?uri ]'}"
140,"{'en': 'how many rivers and lakes are in south carolina?', 'sparql': 'select (COUNT(distinct ?uri) AS ?count) where [ [ ?uri onto:location res:South_Carolina ; rdf:type onto:Lake ] UNION [ ?uri dct:subject dbc:Rivers_and_streams_of_South_Carolina ] ]'}"
141,"{'en': 'who was called rodzilla?', 'sparql': 'select distinct ?uri where [ ?uri foaf:nick ""Rodzilla""@en ]'}"
142,"{'en': 'give me the capitals of all countries in africa.', 'sparql': 'select distinct ?uri where [ ?country dct:subject dbc:Countries_in_Africa ; onto:capital ?uri ]'}"
143,"{'en': 'which bridges are of the same type as the manhattan bridge?', 'sparql': 'select distinct ?bridge where [ res:Manhattan_Bridge onto:type ?type . ?bridge onto:type ?type ; rdf:type onto:Bridge ]'}"
144,"{'en': 'how many companies were founded by the founder of facebook?', 'sparql': 'select (COUNT(distinct ?x) AS ?c) where [ res:Facebook <onto:foundedBy> ?uri . ?x <onto:foundedBy> ?uri ]'}"
145,"{'en': ""show me hiking trails in the grand canyon where there's no danger of flash floods."", 'sparql': 'select distinct ?uri where [ ?uri <dbpedia2:trailheads> res:Grand_Canyon filter NOT EXISTS [ ?uri <dbpedia2:hazards> res:Flash_flood> ] ]'}"
146,"{'en': 'which book has the most pages?', 'sparql': 'select distinct ?uri where [ ?uri rdf:type onto:Book ; onto:numberOfPages ?n ] order BY DESC(?n) OFFSET 0 limit 1'}"
147,"{'en': 'what is the largest state in the united states?', 'sparql': 'select ?uri where [ ?uri dct:subject dbc:States_of_the_United_States ; rdf:type onto:AdministrativeRegion ; onto:areaTotal ?area ] order BY DESC(?area) OFFSET 0 limit 1'}"
148,"{'en': 'give me the websites of companies with more than 500000 employees.', 'sparql': 'select distinct ?web where [ ?sub onto:numberOfEmployees ?object . ?sub foaf:homepage ?web filter( xsd:integer(?object) > 500000 ) . ]'}"
149,"{'en': 'what were the names of the three ships by columbus?', 'sparql': 'select ?uri where [ ?uri rdf:type onto:Ship ; dct:subject dbc:Christopher_Columbus ; dct:subject dbc:Exploration_ships ]'}"
